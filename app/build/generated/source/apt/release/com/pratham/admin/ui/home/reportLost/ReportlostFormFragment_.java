//
// DO NOT EDIT THIS FILE.
// Generated using AndroidAnnotations 4.7.0.
// 
// You can create a larger work that contains this file and distribute that work under terms of your choice.
//

package com.pratham.admin.ui.home.reportLost;

import java.util.HashMap;
import java.util.Map;
import android.annotation.SuppressLint;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import com.pratham.admin.R;
import org.androidannotations.api.UiThreadExecutor;
import org.androidannotations.api.bean.BeanHolder;
import org.androidannotations.api.builder.FragmentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

@SuppressLint({
    "NonConstantResourceId"
})
public final class ReportlostFormFragment_
    extends com.pratham.admin.ui.home.reportLost.ReportlostFormFragment
    implements BeanHolder, HasViews, OnViewChangedListener
{
    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private View contentView_;
    private final Map<Class<?> , Object> beans_ = new HashMap<Class<?> , Object>();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    @Override
    public<T extends View> T internalFindViewById(int id) {
        return ((T)((contentView_ == null)?null:contentView_.findViewById(id)));
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        contentView_ = super.onCreateView(inflater, container, savedInstanceState);
        if (contentView_ == null) {
            contentView_ = inflater.inflate(R.layout.fragment_reportlost_form, container, false);
        }
        return contentView_;
    }

    @Override
    public void onDestroyView() {
        super.onDestroyView();
        contentView_ = null;
        et_contactNumber = null;
        tv_lastSeenDate = null;
        tv_serialNo = null;
        tv_brandModel = null;
        et_additionalRemark = null;
        rg_lastSeen = null;
        rg_reportingPerson = null;
        rg_charger = null;
        rg_cover = null;
        rg_sdCard = null;
        rg_policeComplaint = null;
        rg_incidentVerifiedAtOne = null;
        rg_incidentVerifiedAtTwo = null;
        rg_enqUndertaken = null;
        rg_enqConcluded = null;
        iv_backButton = null;
        btn_reportLost = null;
        iv_openCamera = null;
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
    }

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static ReportlostFormFragment_.FragmentBuilder_ builder() {
        return new ReportlostFormFragment_.FragmentBuilder_();
    }

    @Override
    public<T> T getBean(Class<T> key) {
        return ((T) beans_.get(key));
    }

    @Override
    public<T> void putBean(Class<T> key, T value) {
        beans_.put(key, value);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        this.et_contactNumber = hasViews.internalFindViewById(R.id.et_contactNumber);
        this.tv_lastSeenDate = hasViews.internalFindViewById(R.id.tv_lastSeenDate);
        this.tv_serialNo = hasViews.internalFindViewById(R.id.tv_serialNo);
        this.tv_brandModel = hasViews.internalFindViewById(R.id.tv_brandModel);
        this.et_additionalRemark = hasViews.internalFindViewById(R.id.et_additionalRemark);
        this.rg_lastSeen = hasViews.internalFindViewById(R.id.rg_lastSeen);
        this.rg_reportingPerson = hasViews.internalFindViewById(R.id.rg_reportingPerson);
        this.rg_charger = hasViews.internalFindViewById(R.id.rg_charger);
        this.rg_cover = hasViews.internalFindViewById(R.id.rg_cover);
        this.rg_sdCard = hasViews.internalFindViewById(R.id.rg_sdCard);
        this.rg_policeComplaint = hasViews.internalFindViewById(R.id.rg_policeComplaint);
        this.rg_incidentVerifiedAtOne = hasViews.internalFindViewById(R.id.rg_incidentVerifiedAtOne);
        this.rg_incidentVerifiedAtTwo = hasViews.internalFindViewById(R.id.rg_incidentVerifiedAtTwo);
        this.rg_enqUndertaken = hasViews.internalFindViewById(R.id.rg_enqUndertaken);
        this.rg_enqConcluded = hasViews.internalFindViewById(R.id.rg_enqConcluded);
        this.iv_backButton = hasViews.internalFindViewById(R.id.iv_backButton);
        this.btn_reportLost = hasViews.internalFindViewById(R.id.btn_reportLost);
        this.iv_openCamera = hasViews.internalFindViewById(R.id.iv_openCamera);
        if (this.tv_lastSeenDate!= null) {
            this.tv_lastSeenDate.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    ReportlostFormFragment_.this.setLastSeenDate();
                }
            }
            );
        }
        if (this.iv_openCamera!= null) {
            this.iv_openCamera.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    ReportlostFormFragment_.this.openCamera();
                }
            }
            );
        }
        if (this.btn_reportLost!= null) {
            this.btn_reportLost.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    ReportlostFormFragment_.this.reportLost();
                }
            }
            );
        }
        if (this.iv_backButton!= null) {
            this.iv_backButton.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    ReportlostFormFragment_.this.backButton();
                }
            }
            );
        }
        init();
    }

    @Override
    public void enableReplaceButton(final String isMobNo, final String lastSeenDate) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                ReportlostFormFragment_.super.enableReplaceButton(isMobNo, lastSeenDate);
            }
        }
        , 0L);
    }

    public static class FragmentBuilder_
        extends FragmentBuilder<ReportlostFormFragment_.FragmentBuilder_, com.pratham.admin.ui.home.reportLost.ReportlostFormFragment>
    {

        @Override
        public com.pratham.admin.ui.home.reportLost.ReportlostFormFragment build() {
            ReportlostFormFragment_ fragment_ = new ReportlostFormFragment_();
            fragment_.setArguments(args);
            return fragment_;
        }
    }
}
